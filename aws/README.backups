
Despite relying on AWS, even if data is distributed across AZ or across 
Regions, a practical backup startegy is required.

Backup Schedule
Small Database
1) Dump full database to SQL monthly and weekly
2) Dump database changes to SQL daily

Big Database
1) freeze Database activity
2) take a volume snapshot
3) unfreeze Database
4) Do as often as needed depending on importance of data and estimated
   recovery time

Database Backup
1) Rely on XFS filesystem and EBS volume snapshots
4) Restore from EBS volume snapshot backup

Web Site Backup
1) Rely on filesystem snapshots
2) Dump directory trees monthly and weekly
3) Dump directory tree changes daily

Backup from WebSite node and Database Node to S3 Example
$ sudo mysqldump <database> > /var/backups/site/mysql_full_dump.sql
$ sudo rsync -av /srv/vhosts/public_html/ /var/backups/site/
$ sudo rsync -av /srv/vhosts/<user>/public_html/ /var/backups/site/<user>/
$ DATE=`date -u +"%Y%m%d%H%M"`
$ BACKUP_FILE="/var/backups/site_${DATE}.tgz"
$ tar zcvf ${BACKUP_FILE} /var/backups/site/
$ aws s3 mb s3://site-backups/ 
$ aws s3 put "${BACKUP_FILE}" s3://site-backups/
$ sudo rm -rf /var/backups/site/*

